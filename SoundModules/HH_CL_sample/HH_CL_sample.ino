#include <avr/pgmspace.h>
#include <avr/sleep.h>
#define adc_disable()  (ADCSRA &= ~(1<<ADEN))

boolean clicked0 = false;

// Audio encoded as unsigned 8-bit, 8kHz sampling rate
const char sample[] PROGMEM = {
  0x8f, 0x78, 0x75, 0x84, 0x7e, 0x8c, 0x7a, 0x86, 0x83, 0x84, 0x73, 0x78,
  0x8a, 0x8f, 0x79, 0x8d, 0x92, 0x83, 0x88, 0x86, 0x85, 0x87, 0x80, 0x5d,
  0x8c, 0x72, 0x7c, 0x95, 0x6b, 0x6b, 0x68, 0x92, 0x7f, 0x7c, 0x77, 0x84,
  0x86, 0x7f, 0x87, 0x71, 0x87, 0x7f, 0x8f, 0x92, 0x86, 0x6c, 0x66, 0x7c,
  0x83, 0x9a, 0x89, 0x93, 0x8a, 0x7e, 0x77, 0x76, 0x77, 0x6d, 0x7c, 0x77,
  0x7d, 0x76, 0x8c, 0x7e, 0x7d, 0x7e, 0x92, 0x81, 0x82, 0x85, 0x8b, 0x7f,
  0x84, 0x86, 0x7f, 0x82, 0x76, 0x79, 0x7a, 0x8c, 0x72, 0x7a, 0x73, 0x77,
  0x83, 0x97, 0x7f, 0x84, 0x7c, 0x88, 0x8f, 0x7f, 0x7e, 0x86, 0x7a, 0x73,
  0x7c, 0x7a, 0x83, 0x75, 0x81, 0x7e, 0x79, 0x7f, 0x88, 0x89, 0x80, 0x85,
  0x84, 0x8a, 0x79, 0x78, 0x7c, 0x7c, 0x7b, 0x89, 0x8c, 0x84, 0x82, 0x82,
  0x82, 0x78, 0x81, 0x82, 0x84, 0x79, 0x7c, 0x80, 0x82, 0x81, 0x7d, 0x76,
  0x85, 0x82, 0x87, 0x85, 0x7e, 0x7f, 0x81, 0x7b, 0x79, 0x7f, 0x87, 0x89,
  0x74, 0x82, 0x79, 0x7c, 0x7f, 0x77, 0x7f, 0x82, 0x86, 0x84, 0x7b, 0x87,
  0x83, 0x80, 0x85, 0x7c, 0x80, 0x84, 0x80, 0x84, 0x7a, 0x7f, 0x81, 0x80,
  0x88, 0x85, 0x7e, 0x83, 0x80, 0x77, 0x80, 0x7d, 0x81, 0x79, 0x7e, 0x7c,
  0x83, 0x84, 0x7c, 0x83, 0x7f, 0x86, 0x88, 0x7e, 0x7f, 0x81, 0x79, 0x7f,
  0x81, 0x81, 0x86, 0x7d, 0x7a, 0x7a, 0x82, 0x81, 0x81, 0x84, 0x78, 0x80,
  0x81, 0x7f, 0x86, 0x80, 0x81, 0x85, 0x81, 0x86, 0x7d, 0x7c, 0x86, 0x79,
  0x7f, 0x7b, 0x7c, 0x87, 0x85, 0x7e, 0x7e, 0x80, 0x81, 0x80, 0x7d, 0x7d,
  0x7e, 0x85, 0x80, 0x7b, 0x82, 0x82, 0x84, 0x84, 0x81, 0x82, 0x7b, 0x80,
  0x7a, 0x79, 0x81, 0x7d, 0x84, 0x84, 0x7c, 0x82, 0x82, 0x83, 0x82, 0x7e,
  0x7d, 0x7d, 0x84, 0x7c, 0x7d, 0x87, 0x82, 0x81, 0x82, 0x80, 0x80, 0x81,
  0x80, 0x7f, 0x7b, 0x7e, 0x80, 0x7f, 0x83, 0x80, 0x80, 0x81, 0x7e, 0x7d,
  0x80, 0x82, 0x80, 0x82, 0x82, 0x7f, 0x81, 0x80, 0x7f, 0x7f, 0x84, 0x7f,
  0x7e, 0x83, 0x7f, 0x7b, 0x7e, 0x81, 0x84, 0x7f, 0x7f, 0x80, 0x7f, 0x82,
  0x84, 0x82, 0x7c, 0x81, 0x83, 0x7e, 0x7e, 0x81, 0x7d, 0x80, 0x7e, 0x80,
  0x86, 0x7e, 0x7e, 0x80, 0x80, 0x81, 0x80, 0x7d, 0x82, 0x7f, 0x81, 0x7d,
  0x82, 0x7f, 0x7c, 0x84, 0x82, 0x7f, 0x7f, 0x81, 0x80, 0x7e, 0x81, 0x81,
  0x81, 0x80, 0x80, 0x82, 0x7f, 0x7f, 0x7f, 0x80, 0x83, 0x7d, 0x7d, 0x81,
  0x81, 0x81, 0x7f, 0x7f, 0x81, 0x7e, 0x81, 0x81, 0x7f, 0x81, 0x7f, 0x7e,
  0x7e, 0x81, 0x83, 0x82, 0x7f, 0x80, 0x80, 0x82, 0x7e, 0x81, 0x80, 0x7e,
  0x82, 0x7f, 0x7f, 0x82, 0x80, 0x81, 0x80, 0x80, 0x80, 0x7f, 0x82, 0x80,
  0x7f, 0x80, 0x80, 0x7f, 0x81, 0x7f, 0x7f, 0x81, 0x7f, 0x7f, 0x80, 0x82,
  0x80, 0x7d, 0x80, 0x80, 0x80, 0x82, 0x80, 0x80, 0x7e, 0x81, 0x80, 0x7f,
  0x80, 0x80, 0x80, 0x82, 0x81, 0x80, 0x82, 0x7e, 0x82, 0x7e, 0x80, 0x81,
  0x81, 0x7f, 0x7f, 0x80, 0x7f, 0x7f, 0x80, 0x7f, 0x81, 0x80, 0x7e, 0x81,
  0x80, 0x80, 0x81, 0x7f, 0x81, 0x7f, 0x80, 0x82, 0x7f, 0x81, 0x81, 0x7f,
  0x80, 0x80, 0x81, 0x80, 0x80, 0x81, 0x7e, 0x80, 0x81, 0x7f, 0x80, 0x80,
  0x7f, 0x7f, 0x80, 0x82, 0x80, 0x80, 0x81, 0x81, 0x7f, 0x80, 0x7f, 0x80,
  0x7f, 0x7f, 0x80, 0x80, 0x81, 0x80, 0x7f, 0x7f, 0x80, 0x81, 0x80, 0x80,
  0x81, 0x80, 0x81, 0x80, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x7f, 0x80, 0x81,
  0x7f, 0x80, 0x81, 0x81, 0x7f, 0x80, 0x81, 0x80, 0x80, 0x7f, 0x80, 0x81,
  0x80, 0x80, 0x80, 0x80, 0x7f, 0x80, 0x80, 0x80, 0x7f, 0x80, 0x81, 0x7f,
  0x81, 0x81, 0x80, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81,
  0x80, 0x80, 0x81, 0x7f, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x7f, 0x80, 0x81,
  0x81, 0x7f, 0x80, 0x7f, 0x80, 0x80, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x7f, 0x80, 0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7f, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7f,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x81, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80
};
unsigned int sample_wav_len = 1265;
unsigned int p = 0;

void setup()
{
  // Enable 64 MHz PLL and use as source for Timer1
  PLLCSR = 1 << PCKE | 1 << PLLE;

  // Set up Timer/Counter1 for PWM output
  TIMSK = 0;                              // Timer interrupts OFF
  TCCR1 = 1 << PWM1A | 2 << COM1A0 | 1 << CS10; // PWM A, clear on match, 1:1 prescale
  GTCCR = 1 << PWM1B | 2 << COM1B0;       // PWM B, clear on match
  OCR1A = 128; OCR1B = 128;               // 50% duty at start

  // Set up Timer/Counter0 for 8kHz interrupt to output samples.
  TCCR0A = 3 << WGM00;                    // Fast PWM
  TCCR0B = 1 << WGM02 | 2 << CS00;        // 1/8 prescale
  TIMSK = 1 << OCIE0A;                    // Enable compare match
  OCR0A = 124;                            // Divide by 1000

  //set_sleep_mode(SLEEP_MODE_PWR_DOWN);
  pinMode(4, OUTPUT);
  pinMode(1, OUTPUT);
  pinMode(0, INPUT);

  noInterrupts();
}

void loop()
{
  if (digitalRead(0) == HIGH && clicked0 == false)
  {
    clicked0 = true;
    p = 0;
    interrupts();
  }
  else if (p != 0 && digitalRead(0) == LOW && clicked0 == true)
  {
    clicked0 = false;
    interrupts();
  }
  else if (p == 0 && digitalRead(0) == LOW)
  {
    noInterrupts();
  }
}

// Sample interrupt
ISR(TIMER0_COMPA_vect)
{
  char c = pgm_read_byte(&sample[p++]);
  OCR1A = c;
  OCR1B = c ^ 255;

  if (p == sample_wav_len)
  {
    p = 0;
  }
}



