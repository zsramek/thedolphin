#include <avr/pgmspace.h>
#include <avr/sleep.h>
#define adc_disable()  (ADCSRA &= ~(1<<ADEN))

boolean clicked0 = false;

// Audio encoded as unsigned 8-bit, 8kHz sampling rate
const char sample[] PROGMEM = {
  0x80, 0x80, 0x80, 0x7f, 0x81, 0x7f, 0x81, 0x81, 0x7a, 0x83, 0x84, 0x8d,
  0x6d, 0x79, 0x99, 0x7a, 0x75, 0x77, 0x87, 0x86, 0x92, 0x82, 0x6a, 0x90,
  0x7e, 0x63, 0x6f, 0x84, 0x9a, 0x92, 0x85, 0x77, 0x7e, 0x89, 0x87, 0x79,
  0x66, 0x7d, 0x8d, 0x84, 0x79, 0x6b, 0x6e, 0x7b, 0x85, 0x80, 0x7c, 0x8a,
  0xa6, 0x9c, 0x7f, 0x7f, 0x8e, 0x8d, 0x86, 0x7a, 0x7a, 0x7b, 0x77, 0x6c,
  0x59, 0x62, 0x71, 0x73, 0x7a, 0x81, 0x85, 0x8a, 0x8f, 0x8d, 0x8c, 0x98,
  0xa5, 0xa3, 0x99, 0x8b, 0x82, 0x7f, 0x79, 0x72, 0x6c, 0x71, 0x73, 0x6d,
  0x66, 0x60, 0x64, 0x76, 0x71, 0x74, 0x80, 0x9a, 0x71, 0x87, 0xad, 0x77,
  0x8a, 0x8f, 0x9a, 0xa3, 0xaa, 0x97, 0x76, 0x99, 0x7c, 0x54, 0x67, 0x85,
  0xa2, 0x8f, 0x70, 0x59, 0x5e, 0x6f, 0x70, 0x5c, 0x46, 0x78, 0x98, 0x8c,
  0x81, 0x71, 0x79, 0x93, 0x9f, 0x98, 0x99, 0xab, 0xc5, 0xaa, 0x7a, 0x80,
  0x8e, 0x86, 0x7a, 0x61, 0x60, 0x63, 0x58, 0x45, 0x38, 0x4f, 0x67, 0x75,
  0x83, 0x90, 0x97, 0xa3, 0xad, 0xa3, 0xa7, 0xb8, 0xc5, 0xbb, 0xa0, 0x88,
  0x7a, 0x71, 0x68, 0x58, 0x51, 0x5c, 0x57, 0x57, 0x4d, 0x43, 0x5c, 0x67,
  0x73, 0x85, 0x81, 0x9c, 0xa0, 0x97, 0xaf, 0xab, 0x94, 0xaa, 0xc2, 0xa4,
  0xbb, 0x96, 0x79, 0x9f, 0x6f, 0x4f, 0x5c, 0x6d, 0x72, 0x61, 0x50, 0x42,
  0x56, 0x5b, 0x52, 0x5a, 0x63, 0x80, 0x9b, 0x9b, 0x98, 0x96, 0xa2, 0xbd,
  0xc5, 0xb2, 0xb1, 0xb7, 0xb6, 0x98, 0x72, 0x62, 0x6d, 0x61, 0x52, 0x44,
  0x3d, 0x3d, 0x43, 0x49, 0x40, 0x5e, 0x86, 0x93, 0x9d, 0xac, 0xb8, 0xc1,
  0xc3, 0xc2, 0xba, 0xba, 0xc1, 0xa4, 0x88, 0x76, 0x62, 0x56, 0x4e, 0x45,
  0x3e, 0x3d, 0x40, 0x42, 0x46, 0x59, 0x71, 0x85, 0x9c, 0x9c, 0x95, 0xa8,
  0xc0, 0xb7, 0xaa, 0xb4, 0xb3, 0xb0, 0xb1, 0x97, 0x7c, 0x76, 0x75, 0x69,
  0x5e, 0x51, 0x53, 0x59, 0x50, 0x3e, 0x3c, 0x57, 0x75, 0x75, 0x72, 0x82,
  0x99, 0xa4, 0xa9, 0xb2, 0xb9, 0xbc, 0xbc, 0xb9, 0xaa, 0x9c, 0x90, 0x82,
  0x6f, 0x59, 0x52, 0x57, 0x52, 0x46, 0x43, 0x45, 0x4c, 0x60, 0x6e, 0x79,
  0x89, 0x98, 0xaa, 0xb2, 0xb1, 0xb5, 0xba, 0xb5, 0xaa, 0x9c, 0x96, 0x93,
  0x80, 0x69, 0x5e, 0x59, 0x57, 0x54, 0x4f, 0x51, 0x54, 0x58, 0x62, 0x6b,
  0x7a, 0x92, 0x9f, 0xa1, 0x9e, 0xa4, 0xa7, 0xaa, 0xa7, 0x9f, 0x9c, 0x97,
  0x8d, 0x85, 0x78, 0x68, 0x63, 0x62, 0x63, 0x5e, 0x5d, 0x67, 0x67, 0x65,
  0x65, 0x6c, 0x78, 0x87, 0x92, 0x94, 0x9a, 0x9f, 0x9e, 0xa0, 0xa2, 0x9d,
  0x9e, 0xa0, 0x96, 0x8e, 0x7d, 0x6b, 0x68, 0x5f, 0x55, 0x55, 0x5b, 0x5d,
  0x5d, 0x5f, 0x65, 0x70, 0x80, 0x8b, 0x9a, 0xaa, 0xac, 0xad, 0xad, 0xa6,
  0xa5, 0xa2, 0x95, 0x8b, 0x80, 0x72, 0x6a, 0x5a, 0x4e, 0x53, 0x57, 0x5e,
  0x65, 0x6a, 0x71, 0x7a, 0x7f, 0x84, 0x8f, 0x99, 0xa5, 0xab, 0xa8, 0xa6,
  0x9b, 0x91, 0x91, 0x8b, 0x7e, 0x75, 0x73, 0x6c, 0x63, 0x58, 0x59, 0x61,
  0x67, 0x73, 0x75, 0x7a, 0x83, 0x83, 0x87, 0x8e, 0x8e, 0x95, 0xa0, 0xa5,
  0x9f, 0x97, 0x91, 0x8c, 0x85, 0x7f, 0x7d, 0x73, 0x71, 0x71, 0x65, 0x5b,
  0x5c, 0x62, 0x64, 0x6a, 0x76, 0x81, 0x85, 0x87, 0x8c, 0x92, 0x95, 0x9b,
  0xa4, 0xa7, 0xa3, 0x9d, 0x97, 0x8d, 0x84, 0x79, 0x77, 0x71, 0x61, 0x5b,
  0x5c, 0x53, 0x4c, 0x56, 0x66, 0x78, 0x82, 0x8a, 0x9b, 0x9e, 0x9e, 0xa2,
  0xa3, 0xa2, 0xa0, 0xa3, 0x9a, 0x8d, 0x7f, 0x73, 0x6f, 0x67, 0x5d, 0x5c,
  0x62, 0x62, 0x61, 0x65, 0x68, 0x6f, 0x7c, 0x8b, 0x98, 0x9a, 0x9a, 0xa2,
  0xa0, 0x99, 0x95, 0x96, 0x95, 0x8e, 0x88, 0x7f, 0x76, 0x71, 0x6f, 0x6e,
  0x6a, 0x64, 0x68, 0x6d, 0x66, 0x60, 0x69, 0x74, 0x75, 0x7e, 0x8d, 0x96,
  0x99, 0x9b, 0x9e, 0xa0, 0xa0, 0x9f, 0x9d, 0x98, 0x91, 0x87, 0x7e, 0x76,
  0x6d, 0x68, 0x66, 0x65, 0x5f, 0x56, 0x5c, 0x63, 0x60, 0x63, 0x73, 0x86,
  0x91, 0x98, 0xa0, 0xa5, 0xa7, 0xa9, 0xa6, 0x9f, 0x99, 0x96, 0x90, 0x82,
  0x71, 0x6a, 0x68, 0x65, 0x61, 0x5d, 0x5f, 0x65, 0x66, 0x69, 0x6c, 0x70,
  0x7e, 0x8a, 0x91, 0x98, 0x9f, 0xa3, 0xa3, 0x9f, 0x99, 0x95, 0x94, 0x8e,
  0x83, 0x7a, 0x77, 0x70, 0x6b, 0x6a, 0x69, 0x69, 0x6a, 0x6a, 0x6c, 0x6d,
  0x6e, 0x73, 0x79, 0x80, 0x89, 0x91, 0x97, 0x9f, 0x9d, 0x99, 0x9c, 0x99,
  0x94, 0x8f, 0x88, 0x82, 0x7a, 0x72, 0x6c, 0x69, 0x65, 0x66, 0x6b, 0x6d,
  0x6c, 0x6f, 0x75, 0x79, 0x7a, 0x81, 0x8d, 0x94, 0x96, 0x97, 0x98, 0x97,
  0x95, 0x92, 0x8d, 0x87, 0x82, 0x7b, 0x73, 0x6d, 0x6b, 0x6b, 0x6f, 0x74,
  0x72, 0x77, 0x7f, 0x7e, 0x7c, 0x7f, 0x84, 0x87, 0x88, 0x8c, 0x8d, 0x8d,
  0x8b, 0x89, 0x89, 0x87, 0x83, 0x81, 0x80, 0x7c, 0x77, 0x76, 0x76, 0x75,
  0x77, 0x7b, 0x7f, 0x81, 0x7f, 0x7f, 0x82, 0x7d, 0x79, 0x7f, 0x81, 0x7e,
  0x82, 0x84, 0x84, 0x88, 0x87, 0x88, 0x8a, 0x88, 0x85, 0x86, 0x82, 0x7c,
  0x79, 0x7a, 0x7a, 0x78, 0x7a, 0x7d, 0x7f, 0x7e, 0x7e, 0x7e, 0x7d, 0x7e,
  0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x80, 0x82, 0x83, 0x84, 0x85, 0x85, 0x84,
  0x82, 0x83, 0x82, 0x80, 0x85, 0x87, 0x86, 0x88, 0x85, 0x81, 0x7f, 0x7b,
  0x76, 0x73, 0x71, 0x71, 0x71, 0x6f, 0x70, 0x75, 0x7b, 0x83, 0x88, 0x8c,
  0x91, 0x95, 0x95, 0x92, 0x91, 0x90, 0x8e, 0x8b, 0x88, 0x83, 0x7d, 0x7a,
  0x75, 0x6e, 0x6a, 0x69, 0x6a, 0x6a, 0x69, 0x6b, 0x71, 0x78, 0x7c, 0x84,
  0x8d, 0x93, 0x96, 0x97, 0x96, 0x96, 0x95, 0x93, 0x90, 0x8b, 0x89, 0x86,
  0x81, 0x7a, 0x75, 0x72, 0x6e, 0x6c, 0x68, 0x67, 0x68, 0x68, 0x6a, 0x6d,
  0x75, 0x7e, 0x86, 0x8c, 0x93, 0x97, 0x99, 0x9c, 0x9d, 0x9a, 0x97, 0x96,
  0x92, 0x8b, 0x85, 0x7d, 0x77, 0x70, 0x68, 0x63, 0x60, 0x60, 0x5e, 0x5f,
  0x63, 0x69, 0x74, 0x7e, 0x87, 0x90, 0x98, 0x9f, 0xa3, 0xa5, 0xa5, 0xa2,
  0x9d, 0x97, 0x92, 0x89, 0x80, 0x79, 0x71, 0x69, 0x62, 0x5f, 0x5e, 0x5c,
  0x5c, 0x5f, 0x64, 0x6b, 0x73, 0x7d, 0x87, 0x91, 0x9a, 0xa1, 0xa6, 0xa7,
  0xa7, 0xa5, 0xa0, 0x98, 0x90, 0x8a, 0x81, 0x77, 0x6f, 0x69, 0x63, 0x5e,
  0x5d, 0x5d, 0x5d, 0x5f, 0x64, 0x6a, 0x71, 0x7b, 0x86, 0x91, 0x9a, 0xa2,
  0xa7, 0xaa, 0xaa, 0xa4, 0x9f, 0x9a, 0x91, 0x88, 0x7f, 0x75, 0x6c, 0x64,
  0x5f, 0x5a, 0x59, 0x5b, 0x5e, 0x62, 0x67, 0x6f, 0x79, 0x82, 0x8c, 0x96,
  0x9f, 0xa6, 0xaa, 0xa9, 0xa8, 0xa3, 0x9c, 0x93, 0x89, 0x80, 0x76, 0x6d,
  0x65, 0x5e, 0x5a, 0x5b, 0x5c, 0x5e, 0x62, 0x6a, 0x72, 0x79, 0x80, 0x89,
  0x92, 0x99, 0x9f, 0xa2, 0xa5, 0xa5, 0xa1, 0x9c, 0x95, 0x8d, 0x84, 0x7c,
  0x74, 0x6c, 0x66, 0x62, 0x60, 0x60, 0x62, 0x65, 0x6a, 0x6f, 0x75, 0x7c,
  0x82, 0x88, 0x8f, 0x95, 0x9a, 0x9d, 0x9f, 0x9f, 0x9d, 0x98, 0x92, 0x8c,
  0x84, 0x7c, 0x74, 0x6e, 0x68, 0x63, 0x61, 0x61, 0x63, 0x66, 0x6c, 0x72,
  0x78, 0x80, 0x87, 0x8d, 0x93, 0x97, 0x9c, 0x9e, 0x9e, 0x9d, 0x9a, 0x94,
  0x8e, 0x86, 0x7d, 0x76, 0x6f, 0x68, 0x63, 0x61, 0x61, 0x63, 0x67, 0x6c,
  0x73, 0x7a, 0x81, 0x88, 0x8e, 0x93, 0x96, 0x98, 0x99, 0x99, 0x97, 0x95,
  0x91, 0x8b, 0x86, 0x80, 0x79, 0x73, 0x6f, 0x6a, 0x67, 0x67, 0x68, 0x6a,
  0x6e, 0x73, 0x78, 0x7f, 0x85, 0x8a, 0x8e, 0x93, 0x94, 0x94, 0x95, 0x94,
  0x92, 0x8f, 0x8c, 0x87, 0x82, 0x7c, 0x77, 0x72, 0x6d, 0x6b, 0x69, 0x68,
  0x6a, 0x6d, 0x71, 0x77, 0x7d, 0x83, 0x8a, 0x8f, 0x93, 0x97, 0x97, 0x97,
  0x95, 0x92, 0x8e, 0x89, 0x84, 0x7f, 0x7a, 0x74, 0x70, 0x6d, 0x6b, 0x6a,
  0x6b, 0x6d, 0x70, 0x74, 0x7a, 0x7f, 0x85, 0x8b, 0x8f, 0x93, 0x95, 0x96,
  0x95, 0x92, 0x8f, 0x8a, 0x86, 0x80, 0x7c, 0x77, 0x73, 0x70, 0x6f, 0x6e,
  0x6f, 0x70, 0x71, 0x74, 0x78, 0x7c, 0x80, 0x85, 0x89, 0x8d, 0x90, 0x92,
  0x93, 0x92, 0x90, 0x8d, 0x89, 0x85, 0x81, 0x7d, 0x79, 0x76, 0x73, 0x71,
  0x70, 0x70, 0x71, 0x72, 0x75, 0x77, 0x7b, 0x7e, 0x81, 0x85, 0x89, 0x8c,
  0x8e, 0x91, 0x92, 0x91, 0x8f, 0x8c, 0x89, 0x85, 0x80, 0x7c, 0x78, 0x75,
  0x72, 0x70, 0x70, 0x70, 0x72, 0x74, 0x77, 0x7a, 0x7e, 0x81, 0x85, 0x88,
  0x8b, 0x8d, 0x8f, 0x8f, 0x8f, 0x8e, 0x8b, 0x88, 0x84, 0x80, 0x7c, 0x78,
  0x75, 0x73, 0x71, 0x71, 0x72, 0x74, 0x76, 0x79, 0x7d, 0x80, 0x83, 0x86,
  0x88, 0x8a, 0x8c, 0x8d, 0x8d, 0x8d, 0x8b, 0x89, 0x87, 0x84, 0x80, 0x7c,
  0x79, 0x77, 0x74, 0x73, 0x72, 0x72, 0x74, 0x76, 0x78, 0x7c, 0x7f, 0x83,
  0x85, 0x87, 0x89, 0x8b, 0x8b, 0x8c, 0x8b, 0x8a, 0x89, 0x87, 0x84, 0x81,
  0x7f, 0x7c, 0x79, 0x77, 0x75, 0x74, 0x74, 0x75, 0x76, 0x78, 0x7b, 0x7e,
  0x81, 0x84, 0x87, 0x89, 0x8a, 0x8b, 0x8b, 0x8a, 0x89, 0x87, 0x86, 0x83,
  0x80, 0x7e, 0x7b, 0x79, 0x77, 0x75, 0x75, 0x75, 0x76, 0x77, 0x79, 0x7c,
  0x7e, 0x82, 0x85, 0x88, 0x8a, 0x8b, 0x8c, 0x8b, 0x8a, 0x88, 0x86, 0x84,
  0x81, 0x7f, 0x7d, 0x7a, 0x78, 0x77, 0x76, 0x76, 0x76, 0x77, 0x79, 0x7a,
  0x7c, 0x7f, 0x81, 0x84, 0x86, 0x88, 0x89, 0x8a, 0x8a, 0x89, 0x88, 0x86,
  0x84, 0x81, 0x7f, 0x7d, 0x7b, 0x79, 0x79, 0x78, 0x78, 0x79, 0x7a, 0x7b,
  0x7c, 0x7e, 0x80, 0x81, 0x83, 0x85, 0x86, 0x87, 0x88, 0x88, 0x87, 0x86,
  0x84, 0x83, 0x80, 0x7e, 0x7d, 0x7b, 0x7a, 0x79, 0x79, 0x79, 0x7a, 0x7b,
  0x7c, 0x7e, 0x7f, 0x80, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x87, 0x87,
  0x86, 0x84, 0x83, 0x81, 0x7f, 0x7d, 0x7b, 0x7a, 0x79, 0x79, 0x79, 0x7a,
  0x7b, 0x7c, 0x7e, 0x7f, 0x81, 0x82, 0x84, 0x85, 0x85, 0x86, 0x86, 0x86,
  0x86, 0x85, 0x84, 0x83, 0x81, 0x7f, 0x7e, 0x7c, 0x7b, 0x7a, 0x79, 0x79,
  0x7a, 0x7b, 0x7c, 0x7d, 0x7f, 0x81, 0x82, 0x84, 0x85, 0x85, 0x86, 0x86,
  0x86, 0x85, 0x85, 0x84, 0x82, 0x81, 0x7f, 0x7e, 0x7c, 0x7b, 0x7a, 0x79,
  0x79, 0x79, 0x7a, 0x7b, 0x7d, 0x7f, 0x81, 0x83, 0x84, 0x85, 0x86, 0x87,
  0x86, 0x86, 0x85, 0x84, 0x83, 0x82, 0x80, 0x7f, 0x7e, 0x7c, 0x7b, 0x7b,
  0x7a, 0x7a, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x80, 0x82, 0x83, 0x84, 0x85,
  0x86, 0x86, 0x86, 0x85, 0x84, 0x83, 0x82, 0x81, 0x7f, 0x7e, 0x7d, 0x7c,
  0x7b, 0x7b, 0x7b, 0x7b, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x81, 0x82, 0x84,
  0x85, 0x85, 0x86, 0x86, 0x85, 0x85, 0x84, 0x82, 0x81, 0x80, 0x7e, 0x7d,
  0x7c, 0x7b, 0x7b, 0x7b, 0x7b, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x82,
  0x83, 0x84, 0x85, 0x86, 0x86, 0x86, 0x85, 0x84, 0x83, 0x81, 0x80, 0x7e,
  0x7d, 0x7c, 0x7b, 0x7b, 0x7b, 0x7b, 0x7c, 0x7c, 0x7d, 0x7e, 0x7f, 0x81,
  0x82, 0x83, 0x84, 0x84, 0x85, 0x85, 0x85, 0x84, 0x83, 0x82, 0x81, 0x80,
  0x7f, 0x7e, 0x7d, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7d, 0x7e, 0x7f, 0x7f,
  0x80, 0x81, 0x82, 0x82, 0x83, 0x83, 0x84, 0x84, 0x83, 0x83, 0x83, 0x82,
  0x81, 0x80, 0x7f, 0x7e, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7e, 0x7e,
  0x7f, 0x80, 0x80, 0x81, 0x81, 0x82, 0x82, 0x83, 0x83, 0x83, 0x83, 0x82,
  0x82, 0x81, 0x80, 0x80, 0x7f, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e,
  0x7f, 0x7f, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x81, 0x82, 0x81, 0x81,
  0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,
  0x7f, 0x7f, 0x7f, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
  
};

unsigned int sample_wav_len = sizeof(sample);
unsigned int p = 0;

void setup()
{
  // Enable 64 MHz PLL and use as source for Timer1
  PLLCSR = 1 << PCKE | 1 << PLLE;

  // Set up Timer/Counter1 for PWM output
  TIMSK = 0;                              // Timer interrupts OFF
  TCCR1 = 1 << PWM1A | 2 << COM1A0 | 1 << CS10; // PWM A, clear on match, 1:1 prescale
  GTCCR = 1 << PWM1B | 2 << COM1B0;       // PWM B, clear on match
  OCR1A = 128; OCR1B = 128;               // 50% duty at start

  // Set up Timer/Counter0 for 8kHz interrupt to output samples.
  TCCR0A = 3 << WGM00;                    // Fast PWM
  TCCR0B = 1 << WGM02 | 2 << CS00;        // 1/8 prescale
  TIMSK = 1 << OCIE0A;                    // Enable compare match
  OCR0A = 124;                            // Divide by 1000

  //set_sleep_mode(SLEEP_MODE_PWR_DOWN);
  pinMode(4, OUTPUT);
  pinMode(1, OUTPUT);
  pinMode(0, INPUT);

  noInterrupts();
}

void loop()
{
  if (digitalRead(0) == HIGH && clicked0 == false)
  {
    clicked0 = true;
    p = 0;
    interrupts();
  }
  else if (p != 0 && digitalRead(0) == LOW && clicked0 == true)
  {
    clicked0 = false;
    interrupts();
  }
  else if (p == 0 && digitalRead(0) == LOW)
  {
    noInterrupts();
  }
}

// Sample interrupt
ISR(TIMER0_COMPA_vect)
{
  char c = pgm_read_byte(&sample[p++]);
  OCR1A = c;
  OCR1B = c ^ 255;

  if (p == sample_wav_len)
  {
    p = 0;
  }
}



